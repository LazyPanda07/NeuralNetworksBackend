name: Build

on: 
  push: 
    branches: [master, dev]
    
jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
  
    - name: Checkout SDK
      uses: actions/checkout@v4
      with: 
        repository: 3DiVi/open-source-face-sdk
        path: open-source-face-sdk
        
    - name: Setup conda
      uses: conda-incubator/setup-miniconda@v3

    - name: Setup
      run: |
          conda config --add pkgs_dirs ${{ github.workspace }}\conda
          pip install gdown
          choco install wget
          conda install cudatoolkit=10.1
          conda install -c conda-forge cudnn=7.6.5.32

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@main

    - name: Build SDK
      working-directory: open-source-face-sdk
      run: |
          Add-Content sdk\scripts\windows\make_project.ps1 "msbuild /p:Configuration=Release /p:Platform=x64 INSTALL.vcxproj"
          cd sdk && .\scripts\windows\make_project.ps1

    - name: Rename
      working-directory: open-source-face-sdk
      run: Rename-Item -Path sdk\build\make-install\bin -NewName dll

    - name: Move libs
      working-directory: open-source-face-sdk
      run: Move-Item -Path sdk\build\make-install\dll\*.lib -Destination sdk\build\make-install\lib

    - name: Clean
      working-directory: open-source-face-sdk
      run: |
          Remove-Item sdk\build\make-install\dll\*.exe
          Remove-Item sdk\build\make-install\dll\*.py
          Remove-Item -Path sdk\build\make-install\python_api -Recurse -Force
          
    - name: Copy SDK
      working-directory: open-source-face-sdk
      run: Copy-Item -Path sdk\build\make-install\* -Destination ${{ github.workspace }}\NeuralNetworksBackend\vendor\3divi -Recurse -Force

    - name: Checkout JSON
      uses: actions/checkout@v4
      with:
        repository: LazyPanda07/JSON
        path: JSON

    - name: Build JSON
      run: |
          cd JSON
          msbuild /p:Configuration=ProductionRelease /p:Platform=x64 JSON.vcxproj

    - name: Checkout ThreadPool
      uses: actions/checkout@v4
      with:
        repository: LazyPanda07/ThreadPool
        path: ThreadPool

    - name: Build ThreadPool
      run: |
          cd ThreadPool
          msbuild /p:Configuration=Release /p:Platform=x64 ThreadPool.vcxproj

    - name: Checkout WebFramework
      uses: actions/checkout@v4
      with: 
        repository: LazyPanda07/WebFramework
        path: WebFrameworkLibrary
        submodules: recursive
        ref: build

    - name: Copy dependencies
      shell: bash
      run: |
          cp -r -f JSON/bin/ProductionRelease-x64/JSON/* WebFrameworkLibrary/Localization/dependencies/JSON/libs/ProductionRelease-x64
          cp -r -f ThreadPool/bin/Release-x64/ThreadPool/* WebFrameworkLibrary/FileManager/dependencies/ThreadPool/libs/release

    - name: Initialize project localization
      run: |
          cd WebFrameworkLibrary
          mkdir ProjectLocalization
          cd ProjectLocalization
          echo '{"originalLanguage":"en","otherLanguages":[],"pathToVisualStudio":"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise","debugOutputFolder":"","releaseOutputFolder":"","fileName":"LocalizationData"}' > localization_utils_settings.json

    - name: Build WebFramework
      run: |
          cd WebFrameworkLibrary
          msbuild /p:Configuration=ProductionRelease /p:Platform=x64 WebFramework.sln

    - name: Copy CUDA, CUDNN
      shell: bash
      run: |
          mkdir NeuralNetworksBackend/vendor/nvidia
          cp conda/cudatoolkit-10.1.243-h74a9793_0/Library/bin/*.dll NeuralNetworksBackend/vendor/nvidia
          cp conda/cudnn-7.6.5.32-h36d860d_1/Library/bin/*.dll NeuralNetworksBackend/vendor/nvidia

    - name: Get onnxruntime_cuda.dll
      shell: bash
      run: |
          mkdir NeuralNetworksBackend/vendor/microsoft
          wget -O onnxruntime.zip https://github.com/microsoft/onnxruntime/releases/download/v1.4.0/onnxruntime-win-x64-gpu-1.4.0.zip
          unzip onnxruntime.zip -d onnxruntime
          mv onnxruntime/onnxruntime-win-x64-gpu-1.4.0/lib/onnxruntime.dll NeuralNetworksBackend/vendor/microsoft/onnxruntime_cuda.dll

    - name: Build
      run: msbuild /p:Configuration=Release /p:Platform=x64 /p:WebFrameworkSDK=${{ github.workspace }}\WebFrameworkLibrary\build\ProductionRelease-x64\ NeuralNetworksBackend.sln 

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: NeuralNetworksBackend
        path: bin\Release-x64\NeuralNetworksBackend

    - name: Download latest Simple Server
      uses: robinraju/release-downloader@v1.8
      with:
        repository: LazyPanda07/SimpleServer
        latest: true
        tarBall: false
        zipBall: false

    - name: Upload Simple Server
      uses: actions/upload-artifact@v4
      with:
        name: SimpleServer
        path: SimpleServer.zip

    - name: Upload NeuralNetworksBackend.dll
      uses: actions/upload-artifact@v4
      with:
        name: NeuralNetworksBackendDLL
        path: bin\Release-x64\NeuralNetworksBackend.dll


  publish:
    runs-on: windows-latest
    permissions: write-all
    needs: [build]

    steps:
    - uses: actions/checkout@v4
  
    - name: Setup release version variable
      run: echo "VERSION=$($($($(Select-String -Path .\NeuralNetworksBackend\src\Sample.h -Pattern version) -split '( = )')[2].TrimEnd(';')).Trim('\"'))" >> $Env:GITHUB_ENV

    - name: Release version
      run: echo ${{ env.VERSION }}

    - uses: LazyPanda07/extract-current-branch@master

    - name: Download artifacts
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      uses: actions/download-artifact@v4

    - name: Create NeuralNetworksBackend.zip
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      run: Compress-Archive -Path @("NeuralNetworksBackend") -DestinationPath NeuralNetworksBackend

    - name: Publish Neural Networks Backend
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      uses: svenstaro/upload-release-action@master
      with:
        tag: v${{ env.VERSION }}
        file: NeuralNetworksBackend.zip

    - name: Publish Simple Server
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      uses: svenstaro/upload-release-action@master
      with:
        tag: v${{ env.VERSION }}
        file: SimpleServer/SimpleServer.zip
        