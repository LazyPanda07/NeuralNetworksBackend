<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{cdb9c4ba-7032-45f0-b994-2e652d3a90d4}</ProjectGuid>
    <RootNamespace>NeuralNetworksBackend</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>$(SolutionDir)bin\$(Configuration)-$(Platform)\$(ProjectName)\</OutDir>
    <IntDir>$(SolutionDir)bin\int\$(Configuration)-$(Platform)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;NOMINMAX;uncaught_exception=uncaught_exceptions;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <DebugInformationFormat>None</DebugInformationFormat>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>$(WebFrameworkSDK)include\;$(ProjectDir)vendor\3divi\include\</AdditionalIncludeDirectories>
      <UndefinePreprocessorDefinitions>
      </UndefinePreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(WebFrameworkSDK)libs\;$(ProjectDir)vendor\3divi\lib\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>WebFramework.lib;open_source_sdk.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>xcopy /y $(ProjectDir)*.json $(OutDir)
if exist $(OutDir)\*.lib del /f $(OutDir)*.lib
if exist $(OutDir)\*.exp del /f $(OutDir)*.exp
if exist $(ProjectDir)vendor\3divi\dll for /f %%f in ('dir /b $(ProjectDir)vendor\3divi\dll\') do if not exist $(OutDir)%%f xcopy /y $(ProjectDir)vendor\3divi\dll\%%f  $(OutDir)
if not exist $(OutDir)\data\ xcopy /y /s $(ProjectDir)vendor\3divi\data\ $(OutDir)data\
for /f %%f in ('dir /b $(ProjectDir)vendor\nvidia\') do if not exist $(OutDir)%%f  xcopy /y $(ProjectDir)vendor\nvidia\%%f $(OutDir)
xcopy /y $(ProjectDir)vendor\microsoft\*.dll $(OutDir)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <None Include="app_configuration.json" />
    <None Include="app_localization_modules.json" />
    <None Include="web.json" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="src\parsers\AgeParser.cpp" />
    <ClCompile Include="src\DllMain.cpp" />
    <ClCompile Include="src\Infer.cpp" />
    <ClCompile Include="src\parsers\BaseParser.cpp" />
    <ClCompile Include="src\parsers\EmotionParser.cpp" />
    <ClCompile Include="src\parsers\EyeOpennessParser.cpp" />
    <ClCompile Include="src\parsers\FitterParser.cpp" />
    <ClCompile Include="src\parsers\GenderParser.cpp" />
    <ClCompile Include="src\parsers\GlassesParser.cpp" />
    <ClCompile Include="src\parsers\LivenessParser.cpp" />
    <ClCompile Include="src\parsers\MaskParser.cpp" />
    <ClCompile Include="src\parsers\PoseParser.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="src\Infer.h" />
    <ClInclude Include="src\parsers\AgeParser.h" />
    <ClInclude Include="src\parsers\BaseParser.h" />
    <ClInclude Include="src\parsers\EmotionParser.h" />
    <ClInclude Include="src\parsers\EyeOpennessParser.h" />
    <ClInclude Include="src\parsers\FitterParser.h" />
    <ClInclude Include="src\parsers\GenderParser.h" />
    <ClInclude Include="src\parsers\GlassesParser.h" />
    <ClInclude Include="src\parsers\LivenessParser.h" />
    <ClInclude Include="src\parsers\MaskParser.h" />
    <ClInclude Include="src\parsers\PoseParser.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>